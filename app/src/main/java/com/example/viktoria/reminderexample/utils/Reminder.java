package com.example.viktoria.reminderexample.utils;

import android.os.Parcel;
import android.os.Parcelable;

/**
 * Object that represents reminder model in current application.
 * Implements Parcelable to enable putting Reminder objects in bundle to save instanse state or pass it between fragments in Intent
 */
public class Reminder implements Parcelable {
    private int id; //id in local db, is autogenerated by SQLite and is used as requestId in PendingIntent when scheduling an alarm by AlarmManager
    private String title;
    private String description = "";
    private long eventTime;
    private MinutesBeforeEventTime minutesBeforeEventTime = MinutesBeforeEventTime.ON_TIME; //eventTime-minutesBeforeEventTime = time when to notify
    private boolean isCalendarEventAdded; //flag that choose to set events and notify user by this app or by default calendar in device
    private int eventId; //if event is added to CalendarProvider (isCalendarEventAdded=true), eventId is id of event added to Events table
    private int reminderId; //if event is added to CalendarProvider (isCalendarEventAdded=true), reminderId is id of reminder added to Reminders table
    private boolean isBirthday = false; //if event is reminder to friend's birhday  = true

    private Reminder(Parcel parcel) {
        id = parcel.readInt();
        title = parcel.readString();
        description = parcel.readString();
        eventTime = parcel.readLong();
        minutesBeforeEventTime = MinutesBeforeEventTime.getTypeByValue(parcel.readInt());
        isCalendarEventAdded = parcel.readByte() != 0; //isCalendarEventAdded== true if byte != 0
        eventId = parcel.readInt();
        reminderId = parcel.readInt();
        isBirthday =  parcel.readByte() != 0;
    }

    public Reminder() {

    }

    public Reminder(String title, String description, long eventTime, MinutesBeforeEventTime minutesBeforeEventTime, boolean isCalendarEventAdded) {
        this.title = title;
        this.description = description;
        this.eventTime = eventTime;
        this.minutesBeforeEventTime = minutesBeforeEventTime;
        this.isCalendarEventAdded = isCalendarEventAdded;
    }

    public int getId() {
        return id;
    }


    public int getReminderId() {
        return reminderId;
    }

    public void setReminderId(int reminderId) {
        this.reminderId = reminderId;
    }

    public int getEventId() {
        return eventId;
    }

    public void setEventId(int eventId) {
        this.eventId = eventId;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getTitle() {
        return title;
    }

    public boolean isBirthday() {
        return isBirthday;
    }

    public void setBirthday(boolean isBirthday) {
        this.isBirthday = isBirthday;
    }

    public MinutesBeforeEventTime getMinutesBeforeEventTime() {
        return minutesBeforeEventTime;
    }

    public void setMinutesBeforeEventTime(MinutesBeforeEventTime minutesBeforeEventTime) {
        this.minutesBeforeEventTime = minutesBeforeEventTime;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public long getEventTime() {
        return eventTime;
    }

    public void setEventTime(long eventTime) {
        this.eventTime = eventTime;
    }

    public boolean isCalendarEventAdded() {
        return isCalendarEventAdded;
    }

    public void setCalendarEventAdded(boolean isCalendarEventAdded) {
        this.isCalendarEventAdded = isCalendarEventAdded;
    }


    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel parcel, int flags) {
        parcel.writeInt(id);
        parcel.writeString(title);
        parcel.writeString(description);
        parcel.writeLong(eventTime);
        parcel.writeInt(minutesBeforeEventTime.getValue());
        parcel.writeByte((byte) (isCalendarEventAdded ? 1 : 0)); //if isCalendarEventAdded == true, byte == 1
        parcel.writeInt(eventId);
        parcel.writeInt(reminderId);
        parcel.writeByte((byte) (isBirthday ? 1 : 0));
    }

    public static final Parcelable.Creator<Reminder> CREATOR = new Parcelable.Creator<Reminder>() {
        // get object from parcel
        public Reminder createFromParcel(Parcel in) {
            return new Reminder(in);
        }

        public Reminder[] newArray(int size) {
            return new Reminder[size];
        }
    };

}
